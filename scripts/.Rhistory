state = 'MI',
county = .x,
output = 'wide',
year=2010))
map(counties, x ~ get_flows(geography = 'county subdivision',
state = 'MI',
county = .,
output = 'wide',
year=2010))
map(counties, x function(x) {get_flows(geography = 'county subdivision',
map(.x = counties, .f = ~ get_flows(geography = 'county subdivision',
state = 'MI',
county = x,
output = 'wide',
year=2010))
map(.x = counties, .f = ~ get_flows(geography = 'county subdivision',
state = 'MI',
county = .x,
output = 'wide',
year=2010))
years <- c(2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020)
counties_by_year <- cross(counties, year)
counties_by_year <- expand_grid(counties, year)
years <- c(2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020)
counties_by_year <- expand_grid(counties, years)
countes_by
counties_by_year
counties_by_year[1, 1]
counties_by_year[1, 2]
map(.x = 1:length(counties_by_year), .f = ~ get_flows(geography = 'county subdivision',
state = 'MI',
county = counties_by_year[.x,1],
output = 'tidy',
year=counties_by_year[.x, 2]))
# Get a list of every county in Michigan
counties <- tigris::counties(state = "MI") |>
select(NAME) |>
st_drop_geometry()
years <- c(2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020)
counties_by_year <- expand_grid(counties, years)
map(.x = 1:length(counties_by_year), .f = ~ get_flows(geography = 'county subdivision',
state = 'MI',
county = counties_by_year[.x,1],
output = 'tidy',
year=counties_by_year[.x, 2]))
map(.x = 1:nrow(counties_by_year), .f = ~ get_flows(geography = 'county subdivision',
state = 'MI',
county = counties_by_year[.x,1],
output = 'tidy',
year=counties_by_year[.x, 2]))
x <- map(.x = 1:3, .f = ~ get_flows(geography = 'county subdivision',
state = 'MI',
county = counties_by_year[.x,1],
output = 'tidy',
year=counties_by_year[.x, 2])) |>
rbind()
x
year=counties_by_year[1, 2]
get_flows(geography = 'county subdivision',
state = 'MI',
county = counties_by_year[1,1],
output = 'tidy',
year=counties_by_year[1, 2])
x <- get_flows(geography = 'county subdivision',
state = 'MI',
county = counties_by_year[1,1],
output = 'tidy',
year=counties_by_year[1, 2])
x
x |> View()
year=counties_by_year[.x, 2]) |> mutate(year=counties_by_year[.x, 2])
x <- map(.x = 1:3, .f = ~ get_flows(geography = 'county subdivision',
state = 'MI',
county = counties_by_year[.x,1],
output = 'tidy',
year=counties_by_year[.x, 2]) |> mutate(year=counties_by_year[.x, 2]))
x <- map(.x = 1:3,
.f = ~ get_flows(geography = 'county subdivision',
state = 'MI',
county = counties_by_year[.x,1],
output = 'tidy',
year=counties_by_year[.x, 2])
|> mutate(year=counties_by_year[.x, 2])) |>
lapply(rbind)
x
x <- map(.x = 1:3,
.f = ~ get_flows(geography = 'county subdivision',
state = 'MI',
county = counties_by_year[.x,1],
output = 'tidy',
year=counties_by_year[.x, 2])
|> mutate(year=counties_by_year[.x, 2])) |>
apply(rbind)
x <- map(.x = 1:3,
.f = ~ get_flows(geography = 'county subdivision',
state = 'MI',
county = counties_by_year[.x,1],
output = 'tidy',
year=counties_by_year[.x, 2])
|> mutate(year=counties_by_year[.x, 2])) |>
lapply(rbind)
x <- map(.x = 1:3,
.f = ~ get_flows(geography = 'county subdivision',
state = 'MI',
county = counties_by_year[.x,1],
output = 'tidy',
year=counties_by_year[.x, 2])
|> mutate(year=counties_by_year[.x, 2])) |>
map(rbind)
x
x <- map(.x = 1:3,
.f = ~ get_flows(geography = 'county subdivision',
state = 'MI',
county = counties_by_year[.x,1],
output = 'tidy',
year=counties_by_year[.x, 2])
|> mutate(year=counties_by_year[.x, 2])) |>
reduce(rbind)
x
x <- map(.x = 1:nrow(counties_by_year),
.f = ~ get_flows(geography = 'county subdivision',
state = 'MI',
county = counties_by_year[.x,1],
output = 'tidy',
year=counties_by_year[.x, 2])
|> mutate(year=counties_by_year[.x, 2])) |>
reduce(rbind)
return(rv)
get_reduced_flows <- function(cnty, yr) {
rv <- get_flows(geography='county subdivision',
state='MI',
county=cnty,
output='tidy',
year=yr,
geometry=FALSE) |>
mutate(year=yr) |>
group_by(GEOID1) |>
summarize(MOVEDOUT_M = sum(MOVEDOUT_M, na.rm=TRUE),
MOVEDIN = sum(MOVEDIN, na.rm=TRUE),
MOVEDOUT = sum(MOVEDOUT, na.rm=TRUE),
MOVEDNET = sum(MOVEDNET, na.rm=TRUE),
MOVEDNET_M = sum(MOVEDNET_M, na.rm=TRUE))
return(rv)
}
x <- map(.x = 1:nrow(counties_by_year),
.f = ~ get_reduced_flows(counties_by_year[.x, 1],
counties_by_year[.x, 2])) |>
reduce(rbind)
get_flows(geography = 'coutny subdivision',
state = 'MI',
county = 'Leelanau',
output = 'tidy',
year = 2015,
geometry = F) |>
View()
get_flows(geography = 'county subdivision',
state = 'MI',
county = 'Leelanau',
output = 'tidy',
year = 2015,
geometry = F) |>
View()
get_reduced_flows('Leelanau', 2015)
get_flows(geography = 'county subdivision',
state = 'MI',
county = 'Leelanau',
output = 'wide',
year = 2015,
geometry = F) |>
View()
get_reduced_flows <- function(cnty, yr) {
rv <- get_flows(geography='county subdivision',
state='MI',
county=cnty,
output='wide',
year=yr,
geometry=FALSE) |>
mutate(year=yr) |>
group_by(GEOID1) |>
summarize(MOVEDOUT_M = sum(MOVEDOUT, na.rm=TRUE),
MOVEDIN = sum(MOVEDIN, na.rm=TRUE),
MOVEDOUT = sum(MOVEDOUT, na.rm=TRUE),
MOVEDNET = sum(MOVEDNET, na.rm=TRUE),
MOVEDNET_M = sum(MOVEDNET, na.rm=TRUE))
return(rv)
}
get_reduced_flows('Leelanau', 2015)
get_reduced_flows('Leelanau', 2010)
get_reduced_flows <- function(cnty, yr) {
rv <- get_flows(geography='county subdivision',
state='MI',
county=cnty,
output='wide',
year=yr,
geometry=FALSE) |>
mutate(year=yr) |>
group_by(GEOID1) |>
summarize(MOVEDOUT_M = sum(MOVEDOUT, na.rm=TRUE),
MOVEDIN = sum(MOVEDIN, na.rm=TRUE),
MOVEDOUT = sum(MOVEDOUT, na.rm=TRUE),
MOVEDNET = sum(MOVEDNET, na.rm=TRUE),
MOVEDNET_M = sum(MOVEDNET, na.rm=TRUE))
return(rv)
}
x <- map(.x = 1:nrow(counties_by_year),
.f = ~ get_reduced_flows(counties_by_year[.x, 1],
counties_by_year[.x, 2])) |>
reduce(rbind)
data <- map(.x = 1:nrow(counties_by_year),
.f = ~ get_reduced_flows(counties_by_year[.x, 1],
counties_by_year[.x, 2])) |>
reduce(rbind)
gc()
library(purrr)
library(tidycensus)
library(dplyr)
# Get a list of every county in Michigan
counties <- tigris::counties(state = "MI") |>
select(NAME) |>
st_drop_geometry()
# List of relevant years
years <- c(2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020)
# Get a list of every county in Michigan
counties <- tigris::counties(state = "MI") |>
select(NAME) |>
sf::st_drop_geometry()
# List of relevant years
years <- c(2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020)
# List of all combinations of counties and year
counties_by_year <- expand_grid(counties, years)
?expand_grid
library(tidyr)
# List of all combinations of counties and year
counties_by_year <- expand_grid(counties, years)
# Function which, given a county and year, grabs all flow data
# for its subdivisions and returns net summaries
get_reduced_flows <- function(cnty, yr) {
rv <- get_flows(geography='county subdivision',
state='MI',
county=cnty,
output='wide',
year=yr,
geometry=FALSE) |>
mutate(year=yr) |>
group_by(GEOID1) |>
summarize(MOVEDOUT_M = sum(MOVEDOUT, na.rm=TRUE),
MOVEDIN = sum(MOVEDIN, na.rm=TRUE),
MOVEDOUT = sum(MOVEDOUT, na.rm=TRUE),
MOVEDNET = sum(MOVEDNET, na.rm=TRUE),
MOVEDNET_M = sum(MOVEDNET, na.rm=TRUE))
return(rv)
}
# The actual data
data <- map(.x = 1:nrow(counties_by_year),
.f = ~ get_reduced_flows(counties_by_year[.x, 1],
counties_by_year[.x, 2])) |>
reduce(rbind)
?reduce
# Grab our data for every combination of year and county
data <- map(.x = 1:nrow(counties_by_year),
.f = ~ get_reduced_flows(counties_by_year[.x, 1],
counties_by_year[.x, 2])) |>
reduce(rbind)
# Get a list of every county in Michigan
counties <- tigris::counties(state = "MI") |>
select(NAME) |>
sf::st_drop_geometry()
# List of relevant years
years <- c(2010, 2011, 2012, 2013, 2014, 2015, 2016)
# List of all combinations of counties and year
counties_by_year <- expand_grid(counties, years)
rv <- get_flows(geography = 'county subdivision',
state     = 'MI',
county    = cnty,
output    = 'wide',
year      = yr,
geometry  = FALSE) |>
group_by(GEOID1) |>
summarize(MOVEDOUT_M = sum(MOVEDOUT, na.rm = TRUE),
MOVEDIN    = sum(MOVEDIN,  na.rm = TRUE),
MOVEDOUT   = sum(MOVEDOUT, na.rm = TRUE),
MOVEDNET   = sum(MOVEDNET, na.rm = TRUE),
MOVEDNET_M = sum(MOVEDNET, na.rm = TRUE)) |>
mutate(year = yr)
# Function which, given a county and year, grabs all flow data
# for its subdivisions and returns net summaries
get_reduced_flows <- function(cnty, yr) {
rv <- get_flows(geography = 'county subdivision',
state     = 'MI',
county    = cnty,
output    = 'wide',
year      = yr,
geometry  = FALSE) |>
group_by(GEOID1) |>
summarize(MOVEDOUT_M = sum(MOVEDOUT, na.rm = TRUE),
MOVEDIN    = sum(MOVEDIN,  na.rm = TRUE),
MOVEDOUT   = sum(MOVEDOUT, na.rm = TRUE),
MOVEDNET   = sum(MOVEDNET, na.rm = TRUE),
MOVEDNET_M = sum(MOVEDNET, na.rm = TRUE)) |>
mutate(year = yr)
return(rv)
}
# Grab our data for every combination of year and county
data <- map(.x = 1:nrow(counties_by_year),
.f = ~get_reduced_flows(counties_by_year[.x, 1],
counties_by_year[.x, 2])) |>
reduce(rbind)
data
data |> View()
county_sds <- tigris::county_subdivisions("MI") |> select(NAME, GEOID)
county_sds <- tigris::county_subdivisions("MI") |> select(NAME, GEOID) |> st_drop_geometry()
county_sds <- tigris::county_subdivisions("MI") |>
select(NAME, GEOID) |>
sf::st_drop_geometry()
data <- merge(data, county_sds, by.x = GEOID1, by.y = GEOID2) |>
rename(GEOID = GEOID1, year = year$years)
data <- merge(data, county_sds, by.x = 'GEOID1', by.y = 'GEOID2') |>
rename(GEOID = GEOID1, year = year$years)
data <- merge(data, county_sds, by.x = 'GEOID1', by.y = 'GEOID') |>
rename(GEOID = GEOID1, year = year$years)
data <- merge(data, county_sds, by.x = 'GEOID1', by.y = 'GEOID') |>
dplyr::rename(GEOID = GEOID1, year = year$years)
data <- merge(data, county_sds, by.x = 'GEOID1', by.y = 'GEOID') |>
rename(GEOID = GEOID1, year = `year$years`)
data <- merge(data, county_sds, by.x = 'GEOID1', by.y = 'GEOID') |>
rename(GEOID = GEOID1, year = 'year$years')
data |> names()
# Save data
write.csv(data, '../data/michigan-longitudinal-flow-data.csv', row.names=F)
getwd()
getwd()
library(here)
setwd(here)
setwd(here::here())
getwd()
setwd(here::dr_here())
here::dr_here()
setwd('C:\\Users\wimer\Documents\classes\gisc27104\final_assignment\data')
setwd('C:\\Users\\wimer\\Documents\\classes\\gisc27104\\final_assignment\\data')
setwd('classes/gisc27104/final_assignment')
setwd('classes/gisc27104/final assignment/')
setwd('C:\\Users\\wimer\\Documents\\classes\\gisc27104\\final assignment\\data')
setwd('C:\\Users\\wimer\\Documents\\classes\\gisc27104\\final assignment\\')
setwd('C:\\Users\\wimer\\Documents\\classes\\gisc27104\\final assignment\\code')
setwd('C:\\Users\\wimer\\Documents\\classes\\gisc27104\\final assignment\\scripts')
# Save data
write.csv(data, '../data/michigan-longitudinal-flow-data.csv', row.names=F)
data
# Save shapes
county_sds <- tigris::county_subdivisions("MI")
# Save shapes
st_write(tigris::county_subdivisions("MI"), '../data/shapes/mi-county-subs.shp')
# Save shapes
sf::st_write(tigris::county_subdivisions("MI"), '../data/shapes/mi-county-subs.shp')
warnings()
# Function which, given a county and year, grabs all flow data
# for its subdivisions and returns net summaries
get_reduced_flows <- function(cnty, yr) {
rv <- get_flows(geography = 'county subdivision',
state     = 'MI',
county    = cnty,
output    = 'wide',
year      = yr,
geometry  = FALSE) |>
group_by(GEOID1) |>
summarize(MOVEDOUT_M = sum(MOVEDOUT, na.rm = TRUE),
MOVEDIN    = sum(MOVEDIN,  na.rm = TRUE),
MOVEDOUT   = sum(MOVEDOUT, na.rm = TRUE),
MOVEDNET   = sum(MOVEDNET, na.rm = TRUE),
MOVEDNET_M = sum(MOVEDNET, na.rm = TRUE)) |>
mutate(year = yr)
return(rv)
}
rv <- get_flows(geography = 'county subdivision',
state     = 'MI',
county    = cnty,
output    = 'wide',
year      = yr,
geometry  = FALSE) |>
group_by(GEOID1) |>
summarize(MOVEDOUT_M = sum(MOVEDOUT, na.rm = TRUE),
MOVEDIN    = sum(MOVEDIN,  na.rm = TRUE),
MOVEDOUT   = sum(MOVEDOUT, na.rm = TRUE),
MOVEDNET   = sum(MOVEDNET, na.rm = TRUE),
MOVEDNET_M = sum(MOVEDNET, na.rm = TRUE)) |>
mutate(year = yr)
source("C:/Users/wimer/Documents/classes/gisc27104/final assignment/scripts/get_flow_data_mi.R")
tidycensus::census_api_key("408751ff847cf81dc08f4093f609e20b7eb6e174", install=TRUE)
readRenviron("~/.Renviron")
# Author: Ashlynn Wimer
# Date: 11/3/23
#
# This script pulls flow data from every county subdivision in Michigan from
# 2010 to 2020 using tidycensus `get_flows`. It then merges and saves the data
# sets.
library(tidycensus)
library(purrr)
library(dplyr)
library(tidyr)
library(here)
setwd('C:\\Users\\wimer\\Documents\\classes\\gisc27104\\final assignment\\scripts')
# Get a list of every county in Michigan
counties <- tigris::counties(state = "MI") |>
select(NAME) |>
sf::st_drop_geometry()
# List of relevant years
years <- c(2010, 2011, 2012, 2013, 2014, 2015, 2016)
# List of all combinations of counties and year
counties_by_year <- expand_grid(counties, years)
# Function which, given a county and year, grabs all flow data
# for its subdivisions and returns net summaries
get_reduced_flows <- function(cnty, yr) {
rv <- get_flows(geography = 'county subdivision',
state     = 'MI',
county    = cnty,
output    = 'wide',
year      = yr,
geometry  = FALSE) |>
group_by(GEOID1) |>
summarize(MOVEDOUT_M = sum(MOVEDOUT, na.rm = TRUE),
MOVEDIN    = sum(MOVEDIN,  na.rm = TRUE),
MOVEDOUT   = sum(MOVEDOUT, na.rm = TRUE),
MOVEDNET   = sum(MOVEDNET, na.rm = TRUE),
MOVEDNET_M = sum(MOVEDNET, na.rm = TRUE)) |>
mutate(year = yr)
return(rv)
}
# Grab our data for every combination of year and county
# Fix this so that the year is not. What it now is.
data <- map(.x = 1:nrow(counties_by_year),
.f = ~get_reduced_flows(counties_by_year[.x, 1],
counties_by_year[.x, 2])) |>
reduce(rbind)
# Retrieve Names
county_sds <- tigris::county_subdivisions("MI") |>
select(NAME, GEOID) |>
sf::st_drop_geometry()
data <- merge(data, county_sds, by.x = 'GEOID1', by.y = 'GEOID') |>
rename(GEOID = GEOID1, year = 'year$years')
data <- merge(data, county_sds, by.x = 'GEOID1', by.y = 'GEOID') |>
rename(GEOID = GEOID1)
data |> View()
data <- merge(data, county_sds, by.x = 'GEOID1', by.y = 'GEOID') |>
rename(GEOID = GEOID1, year = `year$years`)
data <- data |> rename(year = `year$years`)
data <- data |> rename(year = "year$years"")
data <- data |> rename(year = "year$years")
data <- data |> rename(year = "year$years")
# Save data
write.csv(data, '../data/michigan-longitudinal-flow-data.csv', row.names=F)
counties_by_year[.x, 2]
counties_by_year[3, 2]
counties_by_year[[3, 2]]
# Author: Ashlynn Wimer
# Date: 11/3/23
#
# This script pulls flow data from every county subdivision in Michigan from
# 2010 to 2020 using tidycensus `get_flows`. It then merges and saves the data
# sets.
library(tidycensus)
library(purrr)
library(dplyr)
library(tidyr)
library(here)
setwd('C:\\Users\\wimer\\Documents\\classes\\gisc27104\\final assignment\\scripts')
# Get a list of every county in Michigan
counties <- tigris::counties(state = "MI") |>
select(NAME) |>
sf::st_drop_geometry()
# List of relevant years
years <- c(2010, 2011, 2012, 2013, 2014, 2015, 2016)
# List of all combinations of counties and year
counties_by_year <- expand_grid(counties, years)
# Function which, given a county and year, grabs all flow data
# for its subdivisions and returns net summaries
get_reduced_flows <- function(cnty, yr) {
rv <- get_flows(geography = 'county subdivision',
state     = 'MI',
county    = cnty,
output    = 'wide',
year      = yr,
geometry  = FALSE) |>
group_by(GEOID1) |>
summarize(MOVEDOUT_M = sum(MOVEDOUT, na.rm = TRUE),
MOVEDIN    = sum(MOVEDIN,  na.rm = TRUE),
MOVEDOUT   = sum(MOVEDOUT, na.rm = TRUE),
MOVEDNET   = sum(MOVEDNET, na.rm = TRUE),
MOVEDNET_M = sum(MOVEDNET, na.rm = TRUE)) |>
mutate(year = yr)
return(rv)
}
# Grab our data for every combination of year and county
# Fix this so that the year is not. What it now is.
data <- map(.x = 1:nrow(counties_by_year),
.f = ~get_reduced_flows(counties_by_year[[ .x, 1 ]],
counties_by_year[[ .x, 2 ]])) |>
reduce(rbind)
# Retrieve Names
county_sds <- tigris::county_subdivisions("MI") |>
select(NAME, GEOID) |>
sf::st_drop_geometry()
data <- merge(data, county_sds, by.x = 'GEOID1', by.y = 'GEOID') |>
rename(GEOID = GEOID1, year = `year$years`)
data |> names()
data <- merge(data, county_sds, by.x = 'GEOID1', by.y = 'GEOID') |>
data <- data|>  rename(GEOID = GEOID1)
data <- merge(data, county_sds, by.x = 'GEOID1', by.y = 'GEOID') |>
data <- data |> rename(GEOID = GEOID1)
data <- merge(data, county_sds, by.x = 'GEOID1', by.y = 'GEOID') |>
data <- rename(data, GEOID = GEOID1)
# Save data
write.csv(data, '../data/michigan-longitudinal-flow-data.csv', row.names=F)
